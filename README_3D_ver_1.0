
- By Ayse Coskun, Katsutoski Kawakami, and Daniel Rossell at Boston University.
- Contact: acoskun@bu.edu
- Acknowledgements: David Atienza at EPFL, Mohamed Sabry at EPFL, Yusuf
  Leblebici at EPFL, and Tajana Rosing at UCSD.

- Current release: November 2011.

All changes to the code are commented with "BU_3D" (grep'ing BU_3D should list
all changes).  Multiple-line changes are marked with BU_3D and end->BU_3D.

"FIXME"s demonstrate the ongoing work. We plan another release within a few
months to address these issues and to provide more features.

Changes in hotspot.c and hotspot.h:
----------------------------------
- Command line option and integer parameter to enable detailed_3D modeling.
- alloc_RC_model function call now takes an input "do_detailed_3D".


Changes in flp.c and flp.h:
---------------------------
- Default flp file allows 4 numerical parameters for block coordinates and
  dimensions. Detailed 3D modeling allows 6 numerical parameters, including
specific heat capacity and resistivity values to be entered for each block.
- [FIXME]: We will add check statements to prevent errors when user enters
  unreasonable values for cp and res or a meaningless # of numerical
parameters.


Changes in temperature.c and temperature.h:
-------------------------------------------
- Added "do_detailed_3D" option to alloc_RC_model function. Works only for grid
  mode simulation.


Changes in temperature_grid.c:
-----------------------------
- Added new functions find_res_3D and find_cap_3D to compute R-C values for
  cells for which user enters specific heat and resistivity values in the flp
file. We return the default values if the user has not specified any additional
values in the flp file.
- Added heterogeneous r-c computation statements within void set_bgmap
  function.
- Added a statement to check whether detailed 3D modeling option is on in
  grid_model_t *alloc_grid_model function.
- Added weighted rz computation in void set_heuristic_temp function.
- Added new macros (*_det3D) to account for the potential heterogeneity in a
  layer.
- Used the new macros in  single_iteration_steady_grid.
- Added computations for rz and capacitance in recursive_multigrid. 
- Used new macros in slope_fn_grid.
- [FIXME]: det3D_grid_reference det3D_grid_values[64][64]. The grid reference
  data structure should be the same size as the grid.  right now its 64x64 by
default. We will make it variable if the user changes size of grid.


*********

How to Run :
-----------
>> ./hotspot -c hotspot.config -f <filename> -p <powerfile> -steady_file <steadyfile> -model_type grid -detailed_3D on -grid_layer_file <lcffile> 
>> ./hotspot -c hotspot.config -init_file <steadyfile> -f <filename> -p <powerfile> -o <ttracefile> -model_type grid -detailed_3D on -grid_layer_file <lcffile>


Included Test Cases :
---------------------
The included test cases consist of TIM layers where a block in the flp has a
number of TSVs. We first compute the resistivity for the block with TSVs. In
order to find the resistivity based on TSV density, we calculate the joint
parallel resistivity (of Cu and TIM) in the following way:

( ((% area of block w.o. TSVs) * (1/TIM Resistivity)) + ((% area of TSVs) * (1/Cu Resistivity)) )^-1

Test files are in the following folders:
default3D: No TSVs
3D_2percent: TSV density of 2 percent of the block area
3D_10percent: TSV density of 10 percent 

TSV density can be computed based on number of TSVs, TSV dimensions, and pitch
constraints between TSVs for a given 3D system. 

Note that it is also possible to have blocks with and without TSVs in the same
layer (see 3D_10percent_v2) or to model each TSV directly. The user should
specify each TSV in the floorplan and provide the Cu resistivity and capacity
values for modeling individual TSVs.

Also note that most of the included test cases only have TSVs in the TIM layer
(no TSVs in the Si layers). Depending on the design, TSVs may connect the
active layers of each Si layer; therefore some of the Si layers may have TSVs
in the bulk Si.  It is possible to model such cases using this tool. See
3D_2percent_v2 as an example.

We do not modify the capacity of the layer in these experiments. The change
in specific heat capacity is expected to have lower impact compared to that
of the thermal resistivity. Capacity values, however, can also be modified in
this tool if needed.


[FIXME] In the next version, we will compute joint resistivity values for the
grid cells bordering between two blocks with different resistivity values.
Currently the resistivity of the default layer over-writes the resistivity of
such border cells, if there are any. Therefore, if a TSV block is small, it may
be ignored in the simulation. However, considering the impact of small TSV
blocks is limited, the accuracy loss for the current version is expected to be
low.
